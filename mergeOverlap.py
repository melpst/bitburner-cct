
def mergeOverlap(arr):
    merged = [arr[0]]
    for a in arr[1:]:
        filtered = list(filter(lambda x: x[0]<=a[1] and x[1]>=a[0], merged))
        if(len(filtered)==0):
            merged.append(a)
        else:
            for f in filtered:
                if f[0]<=a[1] and f[0]<a[0]:
                        a[0] = f[0]
                if f[1]>=a[0] and f[1]>a[1]:
                        a[1] = f[1]
            # print(a)
            merged = list(filter(lambda x: x not in filtered and x != a, merged))
            merged.append(a)
            merged.sort()
    return merged

input = [[8,13],[22,30],[4,6],[14,20]]
print(mergeOverlap(input))

assert mergeOverlap([[1, 3], [8, 10], [2, 6], [10, 16]]) == [[1, 6], [8, 16]]
assert mergeOverlap([[14,16],[20,23],[3,9],[6,16],[11,15],[7,17],[18,26],[13,21]]) == [[3, 26]]
assert mergeOverlap([[17,23],[19,28],[5,7],[18,22],[12,14],[2,7],[10,12],[11,14],[7,17],[1,11],[17,25],[9,19],[17,26],[13,15],[24,27],[14,19],[20,25],[7,12],[18,19]]) == [[1, 28]]
assert mergeOverlap([[22,23],[14,24],[4,5],[10,12],[8,11],[12,20],[16,23],[16,18],[19,26],[1,7],[7,17],[5,10],[9,16],[19,27],[9,16],[23,31]]) == [[1, 31]]
assert mergeOverlap([[2,8],[9,11],[7,16],[16,20],[2,3],[11,13]]) == [[2, 20]]
assert mergeOverlap([[22,27],[19,21],[13,14],[20,26],[18,26]]) == [[13, 14], [18, 27]]
assert mergeOverlap([[19,24],[16,19],[10,12],[21,28],[7,10],[22,27],[4,5],[3,9]]) == [[3, 12], [16, 28]]
assert mergeOverlap([[24,32],[8,13],[25,33],[8,15],[4,12],[14,23],[5,11],[10,18],[4,8],[8,10],[20,28],[23,28],[8,13],[3,7],[18,26],[25,29],[4,13]]) == [[3, 33]]
assert mergeOverlap([[25,28],[19,28],[21,22],[11,19],[9,16],[2,3],[19,25],[16,25],[24,26]]) == [[2, 3], [9, 28]]
assert mergeOverlap([[11,13],[25,28],[4,11],[3,9],[1,10],[14,15],[19,24],[6,9],[20,22],[2,7],[19,29],[22,31],[24,25],[15,19],[22,26]]) == [[1, 13], [14, 31]]
assert mergeOverlap([[9,19],[8,14],[14,23],[17,24],[6,15],[25,34]]) == [[6, 24], [25, 34]]
assert mergeOverlap([[8,13],[22,30],[4,6],[14,20]]) == [[4, 6], [8, 13], [14, 20], [22, 30]]